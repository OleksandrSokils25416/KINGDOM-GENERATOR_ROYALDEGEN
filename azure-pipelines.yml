trigger:
  branches:
    include:
      - main

pool:
  name: DeGenAgent
  vmImage: 'windows-latest'

stages:
  - stage: Build_Frontend
    displayName: "Build Frontend"
    jobs:
      - job: Frontend
        displayName: "Install and Build Frontend"
        steps:
          - script: |
              cd client/royaldegen
              npm install
              npm run build
            displayName: "Install Dependencies and Build React App"

          - script: |
              IF NOT EXIST "$(Build.ArtifactStagingDirectory)\frontend" (
                  mkdir "$(Build.ArtifactStagingDirectory)\frontend"
              )
              xcopy client\royaldegen\build\* "$(Build.ArtifactStagingDirectory)\frontend" /s /e /y
            displayName: "Prepare Frontend Build Artifacts"

          - task: PublishBuildArtifacts@1
            inputs:
              pathToPublish: $(Build.ArtifactStagingDirectory)\frontend
              artifactName: "frontend"
              publishLocation: "Container"
            displayName: "Publish Frontend Build Artifact"

  - stage: Build_Backend
    displayName: "Build Backend"
    jobs:
      - job: Backend
        displayName: "Install Backend and Setup Database"
        steps:
          - task: UsePythonVersion@0
            inputs:
              versionSpec: '3.12.7'
              githubToken: $(gitToken)
            displayName: "Install Python"

          - script: |
              python -m venv venv
              venv\Scripts\activate
              pip install -r server/kingdom1/requirements.txt
            displayName: "Install Dependencies"

          - script: |
              venv\Scripts\activate
              python server/kingdom1/Database.py
            displayName: "Run Database Setup Script"

          - script: |
              IF NOT EXIST "$(Build.ArtifactStagingDirectory)\backend" (
                  mkdir "$(Build.ArtifactStagingDirectory)\backend"
              )
              xcopy server\kingdom1\* "$(Build.ArtifactStagingDirectory)\backend" /s /e /y
            displayName: "Prepare Backend Build Artifacts"

          - task: PublishBuildArtifacts@1
            inputs:
              pathToPublish: $(Build.ArtifactStagingDirectory)\backend
              artifactName: "backend"
              publishLocation: "Container"
            displayName: "Publish Backend Build Artifact"
